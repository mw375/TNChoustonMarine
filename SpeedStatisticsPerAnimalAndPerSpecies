import arcpy, numpy
#set the workspace folder ******CHANGE THIS EVERY RUN******************************************************************************
path = "E:/0Val_Local/Phase2DataCleaning/3_Filt1_DuplicatesRemoved_SpeedKMPH/"
species = path+"{}".format("BWHA.gdb")
outpath = 'E:/0Val_Local/Phase2DataCleaning/5_SpeedStatistics/'
arcpy.env.workspace = species
arcpy.env.overwriteOutput = True

#list feature classes and print them to confirm they are correct
fcs = arcpy.ListFeatureClasses()
#print fcs

#define all statistical functions
#they need to be defined since we are first converting fields to list variables
#then running statistic functions on the list variables created from the field
def calculate_mean_value(table, field):
    na = arcpy.da.TableToNumPyArray(table, field)
    return numpy.mean(na[field])

def calculate_max_value(table, field):
    na = arcpy.da.TableToNumPyArray(table, field)
    return numpy.max(na[field])

def calculate_min_value(table, field):
    na = arcpy.da.TableToNumPyArray(table, field)
    return numpy.min(na[field])

def calculate_med_value(table, field):
    na = arcpy.da.TableToNumPyArray(table, field)
    return numpy.median(na[field])

def calculate_std_value(table, field):
    na = arcpy.da.TableToNumPyArray(table, field)
    return numpy.std(na[field])

#set variables equal to list variables so they can store mean/max/min, etc. for
#each animal as a list of values
meanvals = []
maxvals = []
minvals = []
medvals = []
stdvals = []
names = []

#define the lists using the functions created above
for fc in fcs:
    if 'NOPERMISSION' not in fc and 'OUTOFSTUDYAREA' not in fc and 'FORAGING' not in fc and 'DATEONLY' not in fc and 'NULLGEOM' not in fc:
        print fc
        meanvals.append(calculate_mean_value(fc, 'SpeedKMPH'))
        maxvals.append(calculate_max_value(fc, 'SpeedKMPH'))
        minvals.append(calculate_min_value(fc, 'SpeedKMPH'))
        medvals.append(calculate_med_value(fc, 'SpeedKMPH'))
        stdvals.append(calculate_std_value(fc, 'SpeedKMPH'))
        names.append(fc)

#write the lists to a text file ******CHANGE THIS EVERY RUN**********************************************************
f = open(outpath+"{}".format("BWHAstats.txt"),"w")

#headers for text file
f.write("Number,\t Name,\t Mean,\t Max,\t Min,\t Median,\t StDev,\n")

numbers = []
for i in range(len(fcs)):
    numbers.append(i+1)
#write lists to text file
for x in zip(numbers,names,meanvals,maxvals,minvals,medvals,stdvals):
    f.write("{},{},{},{},{},{},{}\n".format(x[0],x[1],x[2],x[3],x[4],x[5],x[6]))

f.close()

#define the mean/std/median for the species (from list of avg speeds per animal)
mean = numpy.mean(meanvals)
stdev = numpy.std(meanvals)
median = numpy.median(meanvals)

#print the single value statistics for the species (instead of list per animal)
print "The folder is " + species
print "The mean is " + str(mean)
print "The standard deviation is " + str(stdev)
print "The minimum average speed is " + str(min(meanvals))
print "The maximum average speed is " + str(max(meanvals))
print "The median is " + str(median)
print "The number of animals is " +str(len(fcs))

counterror = 0
countdateonly = 0
for fc in fcs:
    if 'NOPERMISSION' in fc or 'OUTOFSTUDYAREA' in fc or 'FORAGING' in fc or 'NULLGEOM' in fc:
        counterror = counterror+1
    if 'DATEONLY' in fc:
        countdateonly = countdateonly+1

print "The number of date only files is:"+str(countdateonly)
print "The number of error files is:"+str(counterror)
