import arcpy, math, numpy
from arcpy import da
from math import hypot

arcpy.env.overwriteOutput = True

#calculate mean value of a field within a table
def calculate_mean_value(table, field):
    na = arcpy.da.TableToNumPyArray(table, field)
    return numpy.mean(na[field])

#------------STEP ONE - CALCULATE TIME DELTA IN HOURS---------------------------
fc = "E:/0Val_Local/Phase2DataCleaning/7_BrownianBridgesInputsAndResults/BBMM_Inputs.gdb/OSPR_Input2_Lambert"
print fc
vertices = fc
firstRow = True
arcpy.AddField_management(fc,"TimeDelta","TEXT")
#arcpy.AddField_management(fc,"TimeDelta2","DOUBLE")

#Calculate TimeDelta as a text field with format x days, hh:mm:ss as timestep (string field)
# ***UPDATE THESE FIELD NAMES EACH RUN*** - should be id#, timefield, timedelta ***CHANGE FIELD NAMES FOR EACH RUN************************************************
with arcpy.da.UpdateCursor(vertices,['OBJECTID','DateTime2','TimeDelta']) as cursor:
    for row in cursor:
        gap2 = row[1]
        if firstRow == True:
            gap1 = gap2
            firstRow = False
            continue
        row[2] = str(gap2 - gap1)
        gap1 = gap2
        cursor.updateRow(row)
#Calculate TimeDelta2 as a double field with format x.xxxx (hours) as timestep
arcpy.CalculateField_management(fc,"TimeDelta2", expression="get_hour( !TimeDelta!)", expression_type="PYTHON_9.3", code_block="def get_hour(time_str):\n    if 'days,' in time_str:\n        days, end = time_str.split('days,')\n        h,m,s = end.split(':')\n        return float(days)*24+float(h)+float(m)/60+float(s)/3600\n    elif 'day,' in time_str:\n        day, end = time_str.split('day,')\n        h,m,s = end.split(':')\n        return float(day)*24+float(h)+float(m)/60+float(s)/3600\n    else:\n        h, m, s = time_str.split(':')\n        return float(h)+float(m)/60+float(s)/3600")

#Remove Null values from the TimeDelta2 field and replace with 0s (first row) - Null in this will give Null in speedKMPH which will mess up calculating the speed statistics
arcpy.CalculateField_management(fc, "TimeDelta2", expression="RemoveNulls( !TimeDelta2!)", expression_type="PYTHON_9.3", code_block="def RemoveNulls(a):\n    if a == None:\n        return 0\n    else: \n        return a")
arcpy.DeleteField_management(fc,'TimeDelta')

#Calculate the mean value of the timestep field
mean = calculate_mean_value(fc, 'TimeDelta2')

print "The average timestep is:" + str(mean)+"hours"
print "The BBMM timestep should be 1/5 of the avg which is:" + str(mean/5)+"hours"
print "The BBMM timestep should be:"+str((mean/5)*(60))
